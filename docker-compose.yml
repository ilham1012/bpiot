version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: unless-stopped
    ports:
      - '2181:2181'
    environment:
      ZOO_ENABLE_AUTH: 'yes'
      ZOO_SERVER_USERS: kafka
      ZOO_SERVER_PASSWORDS: kafka_password
  kafka:
    image: 'bitnami/kafka:latest'
    restart: unless-stopped
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT'
      KAFKA_LISTENERS: 'INSIDE://:9092,OUTSIDE://:9094'
      KAFKA_ADVERTISED_LISTENERS: 'INSIDE://:9092,OUTSIDE://172.17.0.1:9094'
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
      - zookeeper
  mk_bridge:
    build: ./mk_bridge
    restart: unless-stopped
    volumes:
      - './mk_bridge:/code'
    ports:
      - '3967:3967'
    environment:
      KAFKA_HOST: 'kafka:9092'
    depends_on:
      - kafka
      - broker
  broker:
    image: vernemq/vernemq
    restart: unless-stopped
    ports:
      - '1883:1883'
    environment:
      DOCKER_VERNEMQ_ACCEPT_EULA: 'yes'
      DOCKER_VERNEMQ_ALLOW_ANONYMOUS: 'off'
      DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD: 'off'
      DOCKER_VERNEMQ_PLUGINS__VMQ_ACL: 'off'
      DOCKER_VERNEMQ_PLUGINS__VMQ_DIVERSITY: 'on'
      DOCKER_VERNEMQ_VMQ_DIVERSITY__HTTP_AUTH__file: /auth_http.lua
      HTTP_AUTH: auth
    volumes:
      - './broker/auth_http.lua:/auth_http.lua'
  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      B_HOST: backend
      B_PORT: 5000
      F_PORT: 8081
    depends_on:
      - backend
    volumes:
      - './frontend:/code'
  backend:
    build: ./backend
    restart: unless-stopped
    volumes:
      - './backend:/code'
    ports:
      - '5000:5000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: bpiot
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      PORT: 5000
      F_PORT: 8081
    depends_on:
      - db
      - kafka
  db:
    image: 'timescale/timescaledb:2.1.0-pg12'
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: testpass
    volumes:
      - './db/data:/var/lib/postgresql/data'
